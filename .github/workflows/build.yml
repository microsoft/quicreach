name: Build

on:
  push:
    branches: main
  pull_request:
    branches: main

permissions: read-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]
        arch: [x86, x64, arm64]
        tls: [schannel, quictls]
        link: [static, shared]
        exclude:
        - os: ubuntu
          tls: schannel
        - os: ubuntu
          arch: x86
    permissions:
      # required for all workflows
      security-events: write
      # required to fetch internal or private CodeQL packs
      packages: read
      # only required for workflows in private repositories
      actions: read
      contents: read
    name: Build
    runs-on: ${{ matrix.os }}-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
      with:
        egress-policy: audit
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      with:
        submodules: 'recursive'
    - name: Install Perl
      if: runner.os == 'Windows'
      uses: shogo82148/actions-setup-perl@5796a908661aa68fc0a5b8f55c6791af2376d72e
      with:
        perl-version: '5.34'
    - name: Install NASM
      if: runner.os == 'Windows'
      uses: ilammy/setup-nasm@72793074d3c8cdda771dba85f6deafe00623038b
    - name: Install libnuma-dev
      if: runner.os == 'Ubuntu'
      run: sudo apt-get install -y libnuma-dev
    - name: Initialize CodeQL
      if: ${{ (matrix.os == 'ubuntu') && (matrix.arch == 'x64') && (matrix.link == 'shared') }}
      uses: github/codeql-action/init@64d10c13136e1c5bce3e5fbde8d4906eeaafc885
      with:
        languages: c-cpp
        build-mode: manual
        config: |
          queries:
            - uses: security-and-quality # (very verbose)
          query-filters:
            - exclude:
                id: cpp/loop-variable-changed
            - exclude:
                id: cpp/include-non-header
    - name: Build
      shell: pwsh
      run: ./build.ps1 -Arch ${{ matrix.arch }} -Tls ${{ matrix.tls }} -Link ${{ matrix.link }} -Install -BuildInstaller -Debug
    - name: Perform CodeQL Analysis
      if: ${{ (matrix.os == 'ubuntu') && (matrix.arch == 'x64') && (matrix.link == 'shared') }}
      uses: github/codeql-action/analyze@64d10c13136e1c5bce3e5fbde8d4906eeaafc885
      with:
        category: "/language:c-cpp"
        output: sarif-results
        upload: failure-only
    - name: Filter SARIF
      if: ${{ (matrix.os == 'ubuntu') && (matrix.arch == 'x64') && (matrix.link == 'shared') }}
      uses: advanced-security/filter-sarif@f3b8118a9349d88f7b1c0c488476411145b6270d
      with:
        patterns: |
          -msquic/**/*
          -build/**/*
        input: sarif-results/cpp.sarif
        output: sarif-results/cpp.sarif
    - name: Upload SARIF
      if: ${{ (matrix.os == 'ubuntu') && (matrix.arch == 'x64') && (matrix.link == 'shared') }}
      uses: github/codeql-action/upload-sarif@64d10c13136e1c5bce3e5fbde8d4906eeaafc885
      with:
        sarif_file: sarif-results/cpp.sarif
    - name: Upload SARIF to Artifacts
      if: ${{ (matrix.os == 'ubuntu') && (matrix.arch == 'x64') && (matrix.link == 'shared') }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: sarif-results
        path: sarif-results
    - name: Upload
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: bin-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.tls }}-${{ matrix.link }}
        path: |
          build/bin/**/*.so
          build/bin/**/*.dll
          build/bin/**/quicreach
          build/bin/**/quicreach.exe
          build/bin/**/quicreach.msi
    - name: Test (Linux)
      if: runner.os == 'Linux'
      run: /usr/local/bin/quicreach www.cloudflare.com,www.google.com --req-all --stats
    - name: Test (Windows, x64)
      if: ${{ runner.os == 'Windows' && matrix.arch == 'x64' }}
      run: |
        & 'C:/Program Files/quicreach/bin/quicreach' www.cloudflare.com,www.google.com --req-all --stats
    - name: Test (Windows, x86)
      if: ${{ runner.os == 'Windows' && matrix.arch == 'x86' }}
      run: |
        & 'C:/Program Files (x86)/quicreach/bin/quicreach' www.cloudflare.com,www.google.com --req-all --stats
  Complete:
    name: Complete
    if: always()
    needs: [build]
    runs-on: ubuntu-latest
    permissions: {} # No need for any permissions.
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe
      with:
        jobs: ${{ toJSON(needs) }}
