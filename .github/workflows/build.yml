name: Build

on:
  push:
    branches: main
  pull_request:
    branches: main

permissions: read-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]
        tls: [schannel, openssl]
        shared: [on, off]
        exclude:
        - os: ubuntu
          tls: schannel
    permissions:
      contents: read
    name: Build
    runs-on: ${{ matrix.os }}-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@74b568e8591fbb3115c70f3436a0c6b0909a8504
      with:
        egress-policy: audit
    - name: Checkout repository
      uses: actions/checkout@629c2de402a417ea7690ca6ce3f33229e27606a5
      with:
        submodules: 'recursive'
    - name: Install Perl
      if: runner.os == 'Windows'
      uses: shogo82148/actions-setup-perl@2aa8ef47aa9132b67a3833333a2ce121ad721ef9
      with:
        perl-version: '5.34'
    - name: Install NASM
      if: runner.os == 'Windows'
      uses: ilammy/setup-nasm@10788e307d96af7013172d66126322c70b22efb9
    - name: Build (Linux)
      if: runner.os == 'Linux'
      run: |
        mkdir build && cd build
        cmake -G 'Unix Makefiles' -DCMAKE_BUILD_TYPE=RelWithDebInfo -DQUIC_TLS=${{ matrix.tls }} -DQUIC_BUILD_SHARED=${{ matrix.shared }} ..
        cmake --build .
        sudo cmake --install . --config Release
    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir build && cd build
        cmake -G 'Visual Studio 17 2022' -A x64 -DQUIC_TLS=${{ matrix.tls }} -DQUIC_BUILD_SHARED=${{ matrix.shared }} ..
        cmake --build . --config Release
        cmake --install . --config Release
    - name: Upload
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
      with:
        name: bin-${{ matrix.os }}-${{ matrix.tls }}-shared_${{ matrix.shared }}
        path: |
          build/**/*.so
          build/**/*.dll
          build/**/quicreach
          build/**/quicreach.exe
    - name: Test (Linux)
      if: runner.os == 'Linux'
      run: /usr/local/lib/quicreach outlook-evergreen.office.com,www.cloudflare.com,www.google.com --req-all --stats
    - name: Test (Windows)
      if: runner.os == 'Windows'
      run: |
        & 'C:/Program Files/quicreach/lib/quicreach' outlook-evergreen.office.com,www.cloudflare.com,www.google.com --req-all --stats
